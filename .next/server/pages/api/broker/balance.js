"use strict";(()=>{var e={};e.id=93,e.ids=[93],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5322:e=>{e.exports=import("ccxt")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},7559:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>d,default:()=>l,routeModule:()=>h});var o=r(1802),c=r(7153),i=r(6249),n=r(9290),s=e([n]);n=(s.then?(await s)():s)[0];let l=(0,i.l)(n,"default"),d=(0,i.l)(n,"config"),h=new o.PagesAPIRouteModule({definition:{kind:c.x.PAGES_API,page:"/api/broker/balance",pathname:"/api/broker/balance",bundlePath:"",filename:""},userland:n});a()}catch(e){a(e)}})},8950:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{p:()=>n});var o=r(5322),c=e([o]);o=(c.then?(await c)():c)[0];class i{getExchange(e){let t={apiKey:e.apiKey,secret:e.secretKey,enableRateLimit:!0,options:{}};switch(e.baseUrl&&(t.urls={api:{rest:e.baseUrl}}),e.broker.toLowerCase()){case"binance":return new o.default.binance(t);case"coinbase":return new o.default.coinbase(t);case"kraken":return new o.default.kraken(t);case"kucoin":return new o.default.kucoin(t);case"okx":return new o.default.okx(t);default:throw Error(`Unsupported broker: ${e.broker}`)}}async testConnection(e){try{let t=this.getExchange(e);return await t.fetchBalance(),!0}catch(e){return console.error("Connection test failed:",e),!1}}async getBalance(e){try{let t=this.getExchange(e),r=await t.fetchBalance();return Object.entries(r).map(([e,t])=>({currency:e,free:t.free||0,used:t.used||0,total:t.total||0})).filter(e=>e.total>0)}catch(e){throw console.error("Failed to fetch balance:",e),Error("Failed to fetch account balance")}}async getTicker(e,t){try{let r=this.getExchange(e),a=await r.fetchTicker(t);return{symbol:a.symbol,price:a.last,change24h:a.change,changePercent24h:a.percentage,volume24h:a.baseVolume,high24h:a.high,low24h:a.low}}catch(e){throw console.error("Failed to fetch ticker:",e),Error("Failed to fetch price data")}}async placeOrder(e,t){try{let r=this.getExchange(e),a={symbol:t.symbol,type:t.type,side:t.side,amount:t.amount};"limit"===t.type&&t.price&&(a.price=t.price);let o=await r.createOrder(a.symbol,a.type,a.side,a.amount,a.price);return{orderId:o.id,symbol:o.symbol,side:o.side,type:o.type,amount:o.amount,price:o.price,status:o.status,timestamp:o.timestamp}}catch(e){throw console.error("Failed to place order:",e),Error("Failed to place order")}}async getOrderHistory(e,t,r=100){try{let a=this.getExchange(e);return(await a.fetchMyTrades(t,void 0,r)).map(e=>({id:e.id,symbol:e.symbol,side:e.side,amount:e.amount,price:e.price,cost:e.cost,fee:e.fee?.cost||0,timestamp:e.timestamp}))}catch(e){throw console.error("Failed to fetch trade history:",e),Error("Failed to fetch trade history")}}async getOpenOrders(e,t){try{let r=this.getExchange(e);return(await r.fetchOpenOrders(t)).map(e=>({id:e.id,symbol:e.symbol,side:e.side,type:e.type,amount:e.amount,price:e.price,filled:e.filled,remaining:e.remaining,status:e.status,timestamp:e.timestamp}))}catch(e){throw console.error("Failed to fetch open orders:",e),Error("Failed to fetch open orders")}}async cancelOrder(e,t,r){try{let a=this.getExchange(e),o=await a.cancelOrder(t,r);return{orderId:o.id,status:o.status,timestamp:o.timestamp}}catch(e){throw console.error("Failed to cancel order:",e),Error("Failed to cancel order")}}async getMarkets(e){try{let t=this.getExchange(e),r=await t.loadMarkets();return Object.values(r).map(e=>({symbol:e.symbol,base:e.base,quote:e.quote,active:e.active,precision:e.precision,limits:e.limits}))}catch(e){throw console.error("Failed to fetch markets:",e),Error("Failed to fetch markets")}}async getHistoricalData(e,t,r,a=100){try{let o=this.getExchange(e);return(await o.fetchOHLCV(t,r,void 0,a)).map(e=>({timestamp:e[0],open:e[1],high:e[2],low:e[3],close:e[4],volume:e[5]}))}catch(e){throw console.error("Failed to fetch historical data:",e),Error("Failed to fetch historical data")}}async getCurrentPrice(e,t){let r=await this.getTicker(e,t);if("number"!=typeof r.price)throw Error("Price data unavailable");return r.price}}let n=new i;a()}catch(e){a(e)}})},9633:(e,t,r)=>{r.d(t,{_:()=>o});var a=r(3524);let o=global.prisma||new a.PrismaClient({log:["query","info","warn","error"]})},9290:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{default:()=>n});var o=r(9633),c=r(8950),i=e([c]);async function n(e,t){if("GET"!==e.method)return t.status(405).json({message:"Method not allowed"});let{userId:r}=e.query;if(!r)return t.status(400).json({message:"User ID is required"});try{let e=await o._.brokerConnection.findMany({where:{userId:parseInt(r),isActive:!0}});if(0===e.length)return t.status(404).json({message:"No active broker connections found"});let a=[],i=0;for(let t of e)try{let e={id:t.id,broker:t.broker,apiKey:t.apiKey,secretKey:t.secretKey,passphrase:t.passphrase,baseUrl:t.baseUrl},r=await c.p.getBalance(e);a.push({broker:t.broker,balances:r,connectionId:t.id}),r.forEach(e=>{("USDT"===e.currency||"USD"===e.currency)&&(i+=e.total)})}catch(e){console.error(`Failed to fetch balance for ${t.broker}:`,e),a.push({broker:t.broker,balances:[],connectionId:t.id,error:"Failed to fetch balance"})}t.status(200).json({totalUSDValue:i,brokers:a})}catch(e){console.error("Failed to fetch balances:",e),t.status(500).json({message:"Failed to fetch account balances"})}}c=(i.then?(await i)():i)[0],a()}catch(e){a(e)}})},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=7559);module.exports=r})();